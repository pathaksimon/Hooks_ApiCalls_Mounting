{"ast":null,"code":"var _jsxFileName = \"/home/workspace/react-hooks/sessions/making-api-call-with-hooks-part-2/src/components/Leaderboard/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport LeaderboardTable from \"../LeaderboardTable\";\nimport { LeaderboardContainer, LoadingViewContainer } from \"./styledComponents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiStatusConstants = {\n  initial: \"INITIAL\",\n  inProgress: \"IN_PROGRESS\",\n  success: \"SUCCESS\",\n  failure: \"FAILURE\"\n};\n\nconst Leaderboard = () => {\n  _s();\n\n  const [apiResponse, setApiResponse] = useState({\n    status: apiStatusConstants.initial,\n    data: null,\n    errorMsg: null\n  });\n  useEffect(() => {\n    const getLeaderboardData = async () => {\n      setApiResponse({\n        status: apiStatusConstants.inProgress,\n        data: null,\n        errorMsg: null\n      });\n      const url = \"https://apis.ccbp.in/leaderboard\";\n      const options = {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU\"\n        }\n      };\n      const response = await fetch(url, options);\n      const responseData = await response.json();\n      console.log(responseData);\n\n      if (response.ok) {\n        const formattedData = responseData.leaderboard_data.map(each => ({\n          id: each.id,\n          rank: each.rank,\n          name: each.name,\n          profileImage: each.profile_image_url,\n          rank: each.rank,\n          score: each.score,\n          timeSpent: each.time_spent\n        }));\n        setApiResponse(prevApiResponse => ({ ...apiResponse,\n          status: apiStatusConstants.success,\n          data: formattedData\n        }));\n      } else {\n        setApiResponse(prevApiResponse => ({ ...apiResponse,\n          status: apiStatusConstants.failure,\n          errorMsg: responseData.error_msg\n        }));\n      }\n    };\n\n    getLeaderboardData();\n  }, []);\n\n  const renderFailureView = () => {};\n\n  const renderSuccessView = () => {\n    const {\n      data\n    } = apiResponse;\n    return /*#__PURE__*/_jsxDEV(LeaderboardTable, {\n      leaderboardData: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  };\n\n  const renderLoadingView = () => /*#__PURE__*/_jsxDEV(LoadingViewContainer, {\n    children: /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"ThreeDots\",\n      color: \"#ffffff\",\n      height: \"50\",\n      width: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n\n  const renderLeaderboard = () => {\n    const {\n      status\n    } = apiResponse;\n\n    switch (status) {\n      case apiStatusConstants.inProgress:\n        return renderLoadingView();\n\n      case apiStatusConstants.success:\n        return renderSuccessView();\n\n      case apiStatusConstants.failure:\n        return renderFailureView();\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(LeaderboardContainer, {\n    children: renderLeaderboard()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Leaderboard, \"LcejUL5Z8gTq0/4EosyqIhBfGKM=\");\n\n_c = Leaderboard;\nexport default Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["useState","useEffect","Loader","LeaderboardTable","LeaderboardContainer","LoadingViewContainer","apiStatusConstants","initial","inProgress","success","failure","Leaderboard","apiResponse","setApiResponse","status","data","errorMsg","getLeaderboardData","url","options","method","headers","Authorization","response","fetch","responseData","json","console","log","ok","formattedData","leaderboard_data","map","each","id","rank","name","profileImage","profile_image_url","score","timeSpent","time_spent","prevApiResponse","error_msg","renderFailureView","renderSuccessView","renderLoadingView","renderLeaderboard"],"sources":["/home/workspace/react-hooks/sessions/making-api-call-with-hooks-part-2/src/components/Leaderboard/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport LeaderboardTable from \"../LeaderboardTable\";\nimport { LeaderboardContainer, LoadingViewContainer } from \"./styledComponents\";\n\nconst apiStatusConstants = {\n  initial: \"INITIAL\",\n  inProgress: \"IN_PROGRESS\",\n  success: \"SUCCESS\",\n  failure: \"FAILURE\",\n};\n\nconst Leaderboard = () => {\n  const [apiResponse, setApiResponse] = useState({\n    status: apiStatusConstants.initial,\n    data: null,\n    errorMsg: null,\n  });\n\n  useEffect(() => {\n    const getLeaderboardData = async () => {\n      setApiResponse({\n        status: apiStatusConstants.inProgress,\n        data: null,\n        errorMsg: null,\n      });\n\n      const url = \"https://apis.ccbp.in/leaderboard\";\n      const options = {\n        method: \"GET\",\n        headers: {\n          Authorization:\n            \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU\",\n        },\n      };\n      const response = await fetch(url, options);\n      const responseData = await response.json();\n      console.log(responseData);\n      if (response.ok) {\n        const formattedData = responseData.leaderboard_data.map((each) => ({\n          id: each.id,\n          rank: each.rank,\n          name: each.name,\n          profileImage: each.profile_image_url,\n          rank: each.rank,\n          score: each.score,\n          timeSpent: each.time_spent,\n        }));\n        setApiResponse((prevApiResponse) => ({\n          ...apiResponse,\n          status: apiStatusConstants.success,\n          data: formattedData,\n        }));\n      } else {\n        setApiResponse((prevApiResponse) => ({\n          ...apiResponse,\n          status: apiStatusConstants.failure,\n\n          errorMsg: responseData.error_msg,\n        }));\n      }\n    };\n\n    getLeaderboardData();\n  }, []);\n\n  const renderFailureView = () => {};\n\n  const renderSuccessView = () => {\n    const { data } = apiResponse;\n    return <LeaderboardTable leaderboardData={data} />;\n  };\n\n  const renderLoadingView = () => (\n    <LoadingViewContainer>\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </LoadingViewContainer>\n  );\n\n  const renderLeaderboard = () => {\n    const { status } = apiResponse;\n\n    switch (status) {\n      case apiStatusConstants.inProgress:\n        return renderLoadingView();\n      case apiStatusConstants.success:\n        return renderSuccessView();\n      case apiStatusConstants.failure:\n        return renderFailureView();\n      default:\n        return null;\n    }\n  };\n\n  return <LeaderboardContainer>{renderLeaderboard()}</LeaderboardContainer>;\n};\n\nexport default Leaderboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}